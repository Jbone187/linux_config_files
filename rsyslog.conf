#
# Ansible managed
#

####################################################################################

#### MODULES ####

# The imjournal module bellow is now used as a message source instead of imuxsock.
#$ModLoad imuxsock # provides support for local system logging (e.g. via logger command)
module(load="imuxsock")

#$ModLoad imjournal # provides access to the systemd journal
#module(load "imjournal" StateFile="/tmp/imjournalstatefile.log")

$ModLoad imklog
$ModLoad imfile
#$ModLoad imklog # reads kernel messages (the same are read from journald)
#$ModLoad immark  # provides --MARK-- message capability

# Provides UDP syslog reception
#$ModLoad imudp
#$UDPServerRun 514

# Provides TCP syslog reception
#$ModLoad imtcp
#$InputTCPServerRun 514

# Where to place auxiliary files
global(workDirectory="/var/lib/rsyslog")

# Use default timestamp format
module(load="builtin:omfile" Template="RSYSLOG_TraditionalFileFormat")

### RULES ####

# Log all kernel messages to the console.
# Logging much else clutters up the screen.
#kern.*                                                 /dev/console

# Log anything (except mail) of level info or higher.
# Don't log private authentication messages!
*.info;mail.none;authpriv.none;cron.none                /var/log/messages

# The authpriv file has restricted access.
authpriv.*                                              /var/log/secure

# Log all the mail messages in one place.
mail.*                                                  -/var/log/maillog


# Log cron stuff
cron.*                                                  /var/log/cron

# Everybody gets emergency messages
*.emerg                                                 :omusrmsg:*

# Save news errors of level crit and higher in a special file.
uucp,news.crit                                          /var/log/spooler

# Save boot messages also to boot.log
local7.*                                                /var/log/boot.log

####################################################################################

# sender
module(load="omkafka")

# CrushFTP controller.log input
input(type="imfile" File="/var/opt/CrushFTP10/CrushFTP.log"
Tag="crushftplogs")

global(net.enableDNS="off")

# Where to place spool and state files
$WorkDirectory /var/spool/rsyslog

# Include all config files in /etc/rsyslog.d/
$IncludeConfig /etc/rsyslog.d/*.conf


template(name="json-template"
     type="list"
     option.json="on") {
       constant(value="{")
         constant(value="\"timestamp\":\"")      property(name="timereported" dateFormat="rfc3339")
         constant(value="\",\"message\":\"")     property(name="msg")
         constant(value="\",\"host\":\"")        property(name="hostname")
         constant(value="\",\"severity\":\"")    property(name="syslogseverity-text")
         constant(value="\",\"facility\":\"")    property(name="syslogfacility-text")
         constant(value="\",\"syslogtag\":\"")   property(name="syslogtag")
       constant(value="\"}")
     }



main_queue(
  queue.workerthreads="1"      # threads to work on the queue
  queue.dequeueBatchSize="100" # max number of messages to process at once
  queue.size="10000"           # max queue size
)

# send to Kafka
action(
       type="omkafka"
       broker=["kafka01.linux.amerco.org:9093","kafka02.linux.amerco.org:9093","kafka03.linux.amerco.org:9093", "kafka04.linux.amerco.org:9093", "kafka05.linux.amerco.org:9093"]
       confParam=["security.protocol=ssl", "ssl.ca.location=/etc/pki/ca-trust/source/anchors/AmercoRootCA.crt", "ssl.key.location=/etc/ssl/linuxlogs.key.pem", "ssl.certificate.location=/etc/ssl/linuxlogs.pem"]
       partitions.auto="on"
       topic="linuxlogs"
       template="json-template"
      )
